<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>springmvc</display-name>
  
  <!-- springmvc前端控制器的配置 -->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- contextConfigLocation来配置springmvc加载需要的配置文件(处理器映射器，处理器适配器等等) 
    不配置contextConfigLocation会默认加载/WEB-INF/servlet名称-servlet.xml(springmvc-servlet.xml)
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
  </servlet>
  
  <!-- 
  第一种：*.action-访问以.action结尾的由DispatcherServlet进行解析
  第二种：/-所有访问的地址都由DispatcherServlet进行解析，对于静态文件（图片等等）的解析需要进行配置不让DispatcherServlet进行解析
  使用此种方法可以实现RESTful风格的url
  第三种：/*-这种配置不对，使用这种配置最终要转发到一个jsp页面，
  仍然由DispatcherServlet解析jsp,不能根据jsp找到Handler，会报错。
   -->
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>